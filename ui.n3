#  Ontology for user interface hints
#
@prefix wf: <http://www.w3.org/2005/01/wf/flow#>.
@prefix s: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix doc: <http://www.w3.org/2000/10/swap/pim/doc#>.
@prefix contact: <http://www.w3.org/2000/10/swap/pim/contact#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix : <http://dig.csail.mit.edu/2010/issues/track#>.
@prefix tt: <http://dig.csail.mit.edu/2010/issues/track#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.

@keywords is, of, a.

style a r:Property;
	s:label "style";
	s:comment """Must be a valid CSS style string such as one could put in
        an HTML style attribute.  Depedning on teh user interface system, this can
        by given to individuals, classes or properties. It is up to a user interface 
        which wants to draw on them to pick how it uses styles from which parts
        of the data it has.  For example, the style of a class may be picked 
        to distinguish information about things in that class.""".

background-color a r:Property;
	s:label "style";
	s:comment """Must be a valid CSS color string such as one could put in
        an HTML style attribute.  This should be in the #xxxxxx form,
        (with 6 digits of hex)  so that it
        can work with Graphviz.""".

sortPriority a r:Property;
        s:label "sort priority";
        s:range xsd:integer;
        s:comment """When individuals or classes must be sorted, this
        if they are given different values of sortPriority a user agent can
        use this as a hint to how to present information.""".

# ENDS


