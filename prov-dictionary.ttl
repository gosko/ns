@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix : <http://www.w3.org/ns/prov#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

rdfs:comment
    a owl:AnnotationProperty ;
    rdfs:comment ""@en .

rdfs:isDefinedBy
    a owl:AnnotationProperty .

rdfs:label
    a owl:AnnotationProperty ;
    rdfs:comment ""@en .

rdfs:seeAlso
    a owl:AnnotationProperty ;
    rdfs:comment ""@en .

owl:Thing
    a owl:Class .

owl:topObjectProperty
    a owl:ObjectProperty .

owl:versionInfo
    a owl:AnnotationProperty .

<http://www.w3.org/ns/prov#>
    a owl:Ontology ;
    rdfs:comment "0.2"^^xsd:string, """This document is published by the Provenance Working Group (http://www.w3.org/2011/prov/wiki/Main_Page). 

If you wish to make comments regarding this document, please send them to public-prov-comments@w3.org (subscribe public-prov-comments-request@w3.org, archives http://lists.w3.org/Archives/Public/public-prov-comments/). All feedback is welcome."""@en ;
    rdfs:label "PROV Ontology"@en ;
    rdfs:seeAlso <http://www.w3.org/TR/prov#>, <http://www.w3.org/TR/prov-o/> ;
    owl:versionIRI <http://www.w3.org/TR/2012/WD-prov-o-2012MMDD> .

:Collection
    a owl:Class ;
    rdfs:label "Collection"@en ;
    rdfs:subClassOf :Entity ;
    :category "collections" ;
    :component "collections" ;
    :definition """A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections.

A collection is a multiset of entities (it is a multiset, rather than a set, because it may not be possible to verify that two distinct entity identitifiers do not denote, in fact, the same entity)."""@en ;
    :editorialNote "Note that although prov:Collection is defined, few other constructs in PROV-DM and PROV-O elaborate what it is or how to use it. Instead, they both elaborate one of its specializations, prov:Dictionary. Although some of the term names relating to prov:Dictionary may seem that they should also apply to prov:Collection, they are specific to prov:Dictionary. It is left to extensions of PROV-O to provide the terms relating to the insertion and removal of members of the more general class prov:Collection."@en ;
    :prov-dm "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm.html#term-collection" .

:CompleteCollection
    a owl:Class ;
    rdfs:comment "Indicates that no other member belongs to the collection, that is all the prov:member stated for this CompleteMembership constitutes all members of the collection."@en ;
    rdfs:label "CompleteMembership"@en ;
    rdfs:subClassOf :Collection ;
    :category "collections" ;
    :component "collections"@en .

:Dictionary
    a owl:Class ;
    rdfs:comment "A given dictionary forms a given structure for its members. A different structure (obtained either by insertion or removal of members) constitutes a different dictionary."@en, "PROV-DM defines a specific type of collection, a dictionary..."@en, "This concept allows for the provenance of the dictionary, but also of its constituents to be expressed. Such a notion of dictionary corresponds to a wide variety of concrete data structures, such as a maps or associative arrays."@en ;
    rdfs:label "Dictionary"@en ;
    rdfs:subClassOf :Collection ;
    :category "collections" ;
    :component "collections" ;
    :definition "A dictionary is a collection whose members are indexed by keys."@en ;
    :prov-dm "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm.html#term-dictionary" ;
    :prov-dm-constraints "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-constraints.html#collection-constraints" ;
    :prov-n "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-n.html#component6" .

:DictionaryInvolvement
    a owl:Class ;
    rdfs:subClassOf :Involvement ;
    :category "collections" ;
    :component "collections" ;
    :editorsDefinition "prov:DictionaryInvolvement provides descriptions of any binary involvement between any instance and a prov:Dictionary. The property prov:dictionary is used to reference the object of the triple being described."@en .

:EmptyCollection
    a owl:Class ;
    rdfs:comment "An empty dictionary."@en ;
    rdfs:label "Dictionary"@en ;
    rdfs:subClassOf :Collection ;
    :category "collections" ;
    :component "collections" ;
    :definition "An empty collection is a collection without members."@en ;
    :prov-dm "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm.html#term-dictionary" .

:Entity
    a owl:Class ;
    rdfs:comment "An entity is a thing one wants to provide provenance for. For the purpose of this specification, things can be physical, digital, conceptual, or otherwise; things may be real or imaginary."@en ;
    rdfs:label "Entity" ;
    owl:disjointWith :InstantaneousEvent ;
    :category "starting-point" ;
    :component "entities-activities" ;
    :definition "An entity is a thing one wants to provide provenance for. For the purpose of this specification, things can be physical, digital, conceptual, or otherwise; things may be real or imaginary."@en ;
    :prov-dm "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm.html#section-entity-activity"^^xsd:anyURI ;
    :prov-dm-constraints "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm-constraints.html#term-Entity" ;
    :prov-n "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-n.html#expression-Entity" .

:Insertion
    a owl:Class ;
    rdfs:comment "Insertion is a derivation that transforms a dictionary into another, by insertion of one or more key-value pairs."@en ;
    rdfs:label "Insertion" ;
    rdfs:subClassOf :DictionaryInvolvement ;
    :category "collections" ;
    :component "collections" ;
    :definition "Insertion is a derivation that transforms a dictionary into another, by insertion of one or more key-value pairs." ;
    :prov-dm "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm.html#term-collection-insertion" ;
    :prov-dm-constraints "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm-constraints.html#term-Collection" ;
    :prov-n "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-n.html#expression-collection-insertion" ;
    :unqualifiedForm :derivedByInsertionFrom .

:InstantaneousEvent
    a owl:Class ;
    rdfs:comment "An instantaneous event, or event for short, happens in the world and marks a change in the world, in its activities and in its entities. The term 'event' is commonly used in process algebra with a similar meaning. Events represent communications or interactions; they are assumed to be atomic and instantaneous."@en ;
    rdfs:label "InstantaneousEvent" ;
    :category "qualified" ;
    :component "entities-activities" ;
    :definition "An instantaneous event, or event for short, happens in the world and marks a change in the world, in its activities and in its entities. The term 'event' is commonly used in process algebra with a similar meaning. Events represent communications or interactions; they are assumed to be atomic and instantaneous." ;
    :prov-dm "" ;
    :prov-dm-constraints "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-constraints.html#event-ordering" ;
    :prov-n "" .

:Involvement
    a owl:Class ;
    rdfs:comment "Any resource that involved an prov:Activity, prov:Entity, or prov:Agent can qualify its involvement by also referencing an instance of prov:Involvement. Instances of prov:Involvement reference the involved Activity, Entity, or Agent (using prov:activity, prov:entity, or prov:agent, respectively) and may be described with any kind of attributes, including user-defined attributes and those provided by PROV (prov:hadRole, prov:hadPlan, prov:atTime, prov:hadLocation). A description (via prov:Involvement) of the binary involvement implies the assertion of the binary involvement."@en ;
    rdfs:label "Involvement" ;
    :category "qualified" ;
    :editorialNote "For simplicity, the hierarchy 'stops' at the primary resources (Activity, Entity, Agent). Distinctions beyond the type of object involved are not necessary in PROV-O, but may be established by others." ;
    :unqualifiedForm :involved .

:KeyValuePair
    a owl:Class ;
    rdfs:comment "A key-value pair. Part of a prov:Dictionary through prov:Membership. The key is any RDF Literal, the value is a prov:Entity."@en ;
    rdfs:subClassOf :Entity ;
    :category "collections" .

:Removal
    a owl:Class ;
    rdfs:comment "Removal is a derivation that transforms a dictionary into another, by removing one or more key-value pairs."@en ;
    rdfs:label "Removal" ;
    rdfs:subClassOf :DictionaryInvolvement ;
    :category "collections" ;
    :component "collections" ;
    :definition "Removal is a derivation that transforms a dictionary into another, by removing one or more key-value pairs." ;
    :prov-dm "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm.html#term-collection-removal" ;
    :prov-dm-constraints "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm-constraints.html#term-Collection" ;
    :prov-n "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-n.html#expression-collection-removal" ;
    :unqualifiedForm :derivedByRemovalFrom .

:category
    a owl:AnnotationProperty ;
    rdfs:comment "Classify prov-o terms into three categories, including 'starting-point', 'qualifed', and 'extended'. This classification is used by the prov-o html document to gently introduce prov-o terms to its users. "@en .

:component
    a owl:AnnotationProperty ;
    rdfs:comment "Classify prov-o terms into six components according to prov-dm, including 'agents-responsibility', 'alternate', 'annotations', 'collections', 'derivations', and 'entities-activities'. This classification is used so that readers of prov-o specification can find its correspondence with the prov-dm specification."@en .

:definition
    a owl:AnnotationProperty ;
    rdfs:comment "A definition quoted from PROV-DM or PROV-CONSTRAINTS that describes the concept expressed with this OWL term."@en .

:derivedByInsertionFrom
    a owl:ObjectProperty ;
    rdfs:comment "The dictionary was derived from the other by insertion. prov:qualifiedInsertion shows details of the insertion, in particular the inserted key-value pairs."@en ;
    rdfs:domain :Dictionary ;
    rdfs:range :Dictionary ;
    rdfs:subPropertyOf :wasDerivedFrom ;
    owl:propertyChainAxiom (:qualifiedInsertion
        :dictionary
    ) ;
    :category "collections" ;
    :component "collections" ;
    :inverse "hadDerivationByInsertion" ;
    :qualifiedForm :Insertion, :qualifiedInsertion .

:derivedByRemovalFrom
    a owl:ObjectProperty ;
    rdfs:comment "The dictionary was derived from the other by removal. prov:qualifiedRemoval shows details of the removal, in particular the removed key-value pairs."@en ;
    rdfs:domain :Dictionary ;
    rdfs:range :Dictionary ;
    rdfs:subPropertyOf :wasDerivedFrom ;
    owl:propertyChainAxiom (:qualifiedRemoval
        :dictionary
    ) ;
    :category "collections" ;
    :component "collections" ;
    :inverse "hadDerivationByRemoval" ;
    :qualifiedForm :Removal, :qualifiedRemoval .

:dictionary
    a owl:ObjectProperty ;
    rdfs:comment "The property used by a prov:DictionaryInvolvement to cite the prov:Dictionary that was prov:involved in insertion or removal of elements of a collection. "@en ;
    rdfs:domain :DictionaryInvolvement ;
    rdfs:range :Dictionary ;
    rdfs:subPropertyOf :involvee ;
    :category "collections" ;
    :component "collections" ;
    :editorialNote "This property behaves in spirit like rdf:object; it references the object of a prov:involved triple."@en ;
    :inverse "dictionaryOfInvolvement" ;
    :sharesDefinitionWith :DictionaryInvolvement .

:editorialNote
    a owl:AnnotationProperty ;
    rdfs:comment "A note by the OWL development team about how this term expresses the PROV-DM concept, or how it should be used in context of semantic web or linked data."@en .

:editorsDefinition
    a owl:AnnotationProperty ;
    rdfs:comment "When the prov-o term does not have a definition drawn from prov-dm, and the prov-o editor provides one."@en ;
    rdfs:subPropertyOf :definition .

:inserted
    a owl:ObjectProperty ;
    rdfs:comment "An object property to refer to the prov:KeyValuePair inserted into a prov:Dictionary."@en ;
    rdfs:domain :Insertion ;
    rdfs:range :KeyValuePair ;
    :category "collections" ;
    :component "collections" ;
    :inverse "wasInsertedBy" ;
    :sharesDefinitionWith :Insertion .

:inverse
    a owl:AnnotationProperty ;
    rdfs:comment "PROV-O does not define all property inverses. The directionalities defined in PROV-O should be given preference over those not defined. However, if users wish to name the inverse of a PROV-O property, the local name given by prov:inverse should be used."@en ;
    rdfs:seeAlso <http://www.w3.org/TR/prov-o/#names-of-inverse-properties> .

:involved
    a owl:ObjectProperty ;
    :category "qualified" ;
    :editorialNote """The relation the sub-properties of prov:involved can also be specified in more detail using the qualification pattern. For example, the binary relation :baking prov:used :spoon can be qualified by asserting :baking prov:qualifiedUsage [ a prov:Usage; prov:entity :baking; :foo :bar; prov:atLocation :kitchen ] .

Subproperties of prov:involved may also be asserted directly without being qualified.

prov:involved should not be used without also using one of its subproperties. 

"""@en ;
    :editorsDefinition "The broadest provenance relation between two resources, prov:involved is the superproperty of all unqualified binary relations among any two Activities, Entities, or Agents (or anything else). A more specific property should be favored of prov:involved."@en ;
    :inverse "wasInvolvedWith" .

:involvee
    a owl:ObjectProperty ;
    rdfs:comment "Subproperties of prov:involvee are used to cite the object of an unqualified PROV-O triple whose predicate is a subproperty of prov:involved (e.g. prov:used, prov:wasGeneratedBy). prov:involvee is used much like rdf:object is used." ;
    rdfs:domain :Involvement ;
    :category "qualified" ;
    :editorsDefinition "The rdf:object of the (binary) prov:involved relation (triple) that this Involvement is qualifying (reifying) for further description (as an n-ary relation)."@en ;
    :inverse "involvement" .

:pair
    a owl:ObjectProperty ;
    rdfs:comment "A membership can have multiple members."@en ;
    rdfs:range :KeyValuePair ;
    rdfs:subPropertyOf :involvee ;
    :category "collections" ;
    :component "collections" ;
    :editorialNote "This property behaves in spirit like rdf:object; it references the object of a prov:involved triple."@en ;
    :editorsDefinition "The KeyValuePair(s) whose membership is being qualified by this instance of prov:Membership."@en ;
    :inverse "inMembership" .

:pairKey
    a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:comment "The key of a KeyValuePair, which is an element of a prov:Dictionary. See also prov:pairValue."@en ;
    rdfs:domain :KeyValuePair ;
    rdfs:range rdfs:Literal ;
    :category "collections" ;
    :component "collections" ;
    :definition "The key with which an Entity has been inserted into a prov:Dictionary; a key is expected to be unique within each prov:Dictionary."@en .

:pairValue
    a owl:FunctionalProperty, owl:ObjectProperty ;
    rdfs:comment "The value of a KeyValuePair. See also prov:pairKey."@en ;
    rdfs:domain :KeyValuePair ;
    rdfs:range :Entity ;
    :category "collections" ;
    :component "collections" ;
    :editorsDefinition "The Entity value of a KeyValuePair, which may go into a prov:Dictionary under the key specified by prov:pairKey."@en ;
    :inverse "valueOf" .

:prov-aq
    a owl:AnnotationProperty ;
    rdfs:subPropertyOf rdfs:seeAlso .

:prov-dm
    a owl:AnnotationProperty ;
    rdfs:comment "A reference to the principal section of the PROV-DM document that describes this concept."@en ;
    rdfs:subPropertyOf rdfs:seeAlso .

:prov-dm-constraints
    a owl:AnnotationProperty ;
    rdfs:comment "A reference to the principal section of the PROV-CONSTRAINTS document that describes this concept."@en ;
    rdfs:subPropertyOf rdfs:seeAlso .

:prov-n
    a owl:AnnotationProperty ;
    rdfs:comment "A reference to the principal section of the PROV-M document that describes this concept."@en ;
    rdfs:subPropertyOf rdfs:seeAlso .

:qualifiedForm
    a owl:AnnotationProperty ;
    rdfs:comment """This annotation property links a prov:involved subproperty with a prov:Involved subclass. This indicates that the property can be qualified by using prov:qualified. 

Example:
    prov:wasGeneratedBy prov:qualifiedForm prov:Generation .

Then this unqualified assertion:
    :entity1 prov:wasGeneratedBy :activity1 .

can be qualified by adding:
   :entity1 prov:qualified :entity1Gen .
   :entity1Gen a prov:Generation;
       prov:activity :activity1 ;
       :customValue 1337 .

Note how the range of the unqualified property is mirrored by the prov:activity or prov:entity on the involvement class."""@en ;
    rdfs:subPropertyOf rdfs:seeAlso .

:qualifiedInsertion
    a owl:ObjectProperty ;
    rdfs:comment "If this Dictionary prov:derivedByInsertionFrom another Dictionary :e, then it can qualify how it did perform the Insertion using prov:qualifiedInsertion [ a prov:Insertion;  prov:dictionary :e; prov:inserted [a prov:KeyValuePair; prov:pairKey \"k1\"^^xsd:string; prov:pairValue :foo] ]."@en ;
    rdfs:domain :Dictionary ;
    rdfs:range :Insertion ;
    :category "collections" ;
    :component "collections" ;
    :inverse "qualifiedInsertionOf" ;
    :sharesDefinitionWith :Insertion ;
    :unqualifiedForm :derivedByInsertionFrom .

:qualifiedMembership
    a owl:ObjectProperty ;
    rdfs:comment "The collection included the specified membership of keys-values."@en ;
    rdfs:domain :Dictionary ;
    rdfs:label "qualifiedMembership"@en ;
    :category "collections" ;
    :component "collections" ;
    :editorialNote "This property is NOT inverse functional, since the membership of many distinct KeyValuePairs can be qualified using a single instance of prov:Membership."@en ;
    :inverse "membershipOf" ;
    :sharesDefinitionWith :Membership .

:qualifiedRemoval
    a owl:ObjectProperty ;
    rdfs:comment "If this Dictionary prov:derivedByRemovalFrom another Dictionary :e, then it can qualify how it did perform the Removal using prov:qualifiedRemoval [ a prov:Removal;  prov:dictionary :c; prov:removed \"k1\"^^xsd:string ]."@en ;
    rdfs:domain :Dictionary ;
    rdfs:range :Removal ;
    :category "collections" ;
    :component "collections" ;
    :inverse "removedFromDictionary" ;
    :sharesDefinitionWith :Removal ;
    :unqualifiedForm :derivedByRemovalFrom .

:removed
    a owl:DatatypeProperty ;
    rdfs:domain :Removal ;
    rdfs:label "removed"@en ;
    rdfs:range rdfs:Literal ;
    :category "collections" ;
    :component "collections" ;
    :editorialNote "The value of this property refers to the value of a KeyValuePair's prov:pairKey property."@en ;
    :editorsDefinition "The key removed from a prov:Dictionary in a Removal, resulting in a new prov:Dictionary."@en ;
    :prov-dm "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm.html#term-dictionary-removal" .

:sharesDefinitionWith
    a owl:AnnotationProperty ;
    rdfs:subPropertyOf rdfs:seeAlso .

:todo
    a owl:AnnotationProperty .

:tracedTo
    a owl:ObjectProperty, owl:TransitiveProperty ;
    rdfs:comment "An object property to link back an entity to another by means of derivation or responsibility relations, possibly repeatedly traversed."@en ;
    rdfs:domain :Entity ;
    rdfs:range :Entity ;
    rdfs:subPropertyOf :involved ;
    :category "expanded" ;
    :component "derivations" ;
    :inverse "tracedFrom" ;
    :qualifiedForm :Trace, :qualifiedTrace .

:unqualifiedForm
    a owl:AnnotationProperty ;
    rdfs:comment "Classes and properties used to qualify relationships are annotated with prov:unqualifiedForm to indicate the property used to assert an unqualified provenance relation."@en ;
    rdfs:subPropertyOf rdfs:seeAlso .

:value
    a owl:DatatypeProperty ;
    rdfs:comment "Provides a value for an Entity."@en ;
    rdfs:domain :Entity ;
    :category "expanded" ;
    :component "entities-activities" ;
    :editorialNote "The editor's definition comes from http://www.w3.org/TR/rdf-primer/#rdfvalue", "This property serves the same purpose as rdf:value, but has been reintroduced to avoid some of the definitional ambiguity in the RDF specification (specifically, 'may be used in describing structured values')." ;
    :editorsDefinition "The main value (if there is one) of a structured value."@en ;
    :prov-dm "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-dm.html#term-attribute-value" ;
    :prov-dm-constraints "" ;
    :prov-n "" .

:wasAttributedTo
    a owl:ObjectProperty ;
    rdfs:comment "Attribution is the ascribing of an entity to an agent."@en ;
    rdfs:domain :Entity ;
    rdfs:subPropertyOf :tracedTo ;
    :category "starting-point" ;
    :component "agents-responsibility" ;
    :definition "Attribution is the ascribing of an entity to an agent." ;
    :inverse "contributed" ;
    :qualifiedForm :Attribution, :qualifiedAttribution .

:wasDerivedFrom
    a owl:AsymmetricProperty, owl:IrreflexiveProperty, owl:ObjectProperty ;
    rdfs:comment "A derivation is a transformation of an entity into another, a construction of an entity into another, or an update of an entity, resulting in a new one."@en ;
    rdfs:domain :Entity ;
    rdfs:isDefinedBy <http://www.w3.org/ns/prov#> ;
    rdfs:range :Entity ;
    rdfs:subPropertyOf :tracedTo ;
    :category "starting-point" ;
    :component "derivations" ;
    :definition "A derivation is a transformation of an entity into another, a construction of an entity into another, or an update of an entity, resulting in a new one."@en ;
    :inverse "hadDerivation" ;
    :qualifiedForm :Derivation, :qualifiedDerivation .

[]
    a owl:Axiom ;
    rdfs:comment "Insertion is a form of derivation (see http://www.w3.org/TR/prov-dm/#term-dictionary-insertion) that transforms a dictionary into another, by insertion of one or more key-entity pairs. " ;
    owl:annotatedProperty rdfs:subPropertyOf ;
    owl:annotatedSource :derivedByInsertionFrom ;
    owl:annotatedTarget :wasDerivedFrom .

[]
    a owl:Axiom ;
    rdfs:comment "Removal is a form of derivation (see http://www.w3.org/TR/prov-dm/#term-dictionary-removal) that transforms a dictionary into another, by removing one or more key-entity pairs. " ;
    owl:annotatedProperty rdfs:subPropertyOf ;
    owl:annotatedSource :derivedByRemovalFrom ;
    owl:annotatedTarget :wasDerivedFrom .

[]
    a owl:Axiom ;
    rdfs:comment "Attribution is a particular case of trace (see http://www.w3.org/TR/prov-dm/#concept-trace), in the sense that it links an entity to the agent that ascribed it." ;
    owl:annotatedProperty rdfs:subPropertyOf ;
    owl:annotatedSource :wasAttributedTo ;
    owl:annotatedTarget :tracedTo ;
    :definition "IF wasAttributedTo(e2,ag1,aAttr) holds, THEN tracedTo(e2,ag1) also holds. " ;
    :prov-dm-constraints "http://dvcs.w3.org/hg/prov/raw-file/default/model/prov-constraints.html#traceability-inference" .

[]
    a owl:Axiom ;
    rdfs:comment "Derivation is a particular case of trace (see http://www.w3.org/TR/prov-dm/#term-trace), since it links an entity to another entity that contributed to its existence." ;
    owl:annotatedProperty rdfs:subPropertyOf ;
    owl:annotatedSource :wasDerivedFrom ;
    owl:annotatedTarget :tracedTo .

