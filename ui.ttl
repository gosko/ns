    @prefix : <http://www.w3.org/ns/ui#> .
    @prefix dc: <http://purl.org/dc/elements/1.1/> .
    @prefix owl: <http://www.w3.org/2002/07/owl#> .
    @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
    @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
    @prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
    @prefix cc: <http://creativecommons.org/ns#> .
	@prefix vann: <http://purl.org/vocab/vann/> .
	@prefix dcterms: <http://purl.org/dc/terms/> .
	
	######################################
    ######----Metadata here ----####
    ######################################
	
	<http://www.w3.org/ns/ui> a owl:Ontology;
	dcterms:description "An ontology suitable for describing forms, sequences in widgets "@en;
	dcterms:title "A user interface ontology"@en;
	cc:license <http://creativecommons.org/licenses/by/3.0/> ;
    dcterms:modified "2014-02-26"^^xsd:date ;
    dcterms:publisher <http://www.w3.org> ;
    vann:preferredNamespacePrefix "ui" ;
    vann:preferredNamespaceUri <http://www.w3.org/ns/ui#> ;
     .
	
	######################################
    ######----Classes here ----####
    ######################################
	
    :BooleanField     rdfs:subClassOf :NumericField .
    
    :CaseForm     a :Group;
         dc:title "Form for a conditional case in a form"@en;
         :part  [
             a  :Choice;
              :canMintNew :true;
              :from rdfs:Class;
              :label "when it is"@en;
              :property :for;
              :sequence 1 ],
                 [
             a  :Choice;
              :canMintNew :true;
              :from  :Form;
              :property  :use;
              :sequence 2;
              :use :FieldForm ] .
             
     :FieldForm     a  :Group;
         dc:title "Form for selecting a type of field"@en;
          :part  [
             a  :Classifier;
              :category  :Form;
              :property rdf:type;
              :sequence 1 ],
                 [
             a  :Options;
              :case  [
                  :for  :TextField;
                  :use  [
                     a  :Group;
                      :part  [
                         a  :Choice;
                          :canMintNew :true;
                          :from owl:DatatypeProperty;
                          :label "property";
                          :property :property ],
                             [
                         a  :IntegerField;
                         rdfs:label "field size";
                         :max 4096;
                         :min 1;
                         :property :size ],
                             [
                         a :IntegerField;
                         :label "Max. length of string";
                         :min 1;
                         :property :maxLength ] ] ],
                     [
                 :for :IntegerField;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from owl:DatatypeProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ],
                             [
                         a :IntegerField;
                         :label "minimum value";
                         :property :min;
                         :sequence 2 ],
                             [
                         a :IntegerField;
                         :label "maximum value";
                         :property :max;
                         :sequence 3 ] ] ],
                     [
                 :for :DecimalField;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from owl:DatatypeProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ],
                             [
                         a :DecimalField;
                         :label "minimum value";
                         :property :min;
                         :sequence 2 ],
                             [
                         a :DecimalField;
                         :label "maximum value";
                         :property :max;
                         :sequence 3 ] ] ],
                     [
                 :for :FloatField;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from owl:DatatypeProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ],
                             [
                         a :FloatField;
                         :label "minimum value";
                         :property :min;
                         :sequence 2 ],
                             [
                         a :FloatField;
                         :label "maximum value";
                         :property :max;
                         :sequence 3 ] ] ],
                     [
                 :for :ColorField;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from owl:DatatypeProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ] ] ],
                     [
                 :for :DateField;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from owl:DatatypeProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ],
                             [
                         a :DateField;
                         :label "min";
                         :property :min;
                         :sequence 2 ],
                             [
                         a :DateField;
                         :label "max";
                         :property :max;
                         :sequence 3 ] ] ],
                     [
                 :for :DateTimeField;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from owl:DatatypeProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ],
                             [
                         a :DateTimeField;
                         :label "min";
                         :property :min;
                         :sequence 2 ],
                             [
                         a :DateTimeField;
                         :label "max";
                         :property :max;
                         :sequence 3 ] ] ],
                     [
                 :for :EmailField;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from owl:ObjectProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ] ] ],
                     [
                 :for :PhoneField;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from owl:ObjectProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ] ] ],
                     [
                 :for :Group;
                 :use :FieldList ],
                     [
                 :for :Options;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :default  rdf:type;
                         :from  rdf:Property;
                         :label "depending on";
                         :property :dependingOn;
                         :sequence 1 ],
                             [
                         a :Multiple;
                         :part :CaseForm;
                         :property :case;
                         :sequence 2 ] ] ],
                     [
                 :for :Choice;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from owl:ObjectProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ],
                             [
                         a :Choice;
                         :canMintNew :true;
                         :from rdfs:Class;
                         :label "destination class";
                         :property :from;
                         :sequence 2 ],
                             [
                         a :BooleanField;
                         :label "user can add new";
                         :property :canMintNew;
                         :sequence 3 ],
                             [
                         a :Choice;
                         :canMintNew :true;
                         :from :Form;
                         :label "Nested Form (if any)";
                         :optional :true;
                         :property :use;
                         :sequence 4;
                         :use :FormForm ] ] ],
                     [
                 :for :Classifier;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :default  rdf:type;
                         :from owl:ObjectProperty;
                         :label "property";
                         :property :property;
                         :sequence 1 ],
                             [
                         a :Choice;
                         :canMintNew :true;
                         :from rdfs:Class;
                         :label "category";
                         :property :category;
                         :sequence 2 ] ] ],
                     [
                 :for :Multiple;
                 :use  [
                     a :Group;
                     :part  [
                         a :Choice;
                         :canMintNew :true;
                         :from  rdf:Property;
                         :label "property";
                         :property :property;
                         :sequence 1 ],
                             [
                         a :Choice;
                         :canMintNew :true;
                         :from :Form;
                         :property :part;
                         :sequence 2;
                         :use :FieldForm ] ] ],
                     [
                 :for :Heading;
                 :use  [
                     a :SingleLineTextField;
                     :property :contents ] ],
                     [
                 :for :Comment;
                 :use  [
                     a :MultiLineTextField;
                     :property :contents ] ];
             :dependingOn  rdf:type;
             :sequence 2 ] .
    
    :FieldList     a :Multiple;
         :part :FieldForm;
         :property :part;
         :sequence 10 .
    
       
    :Form     a rdfs:Class;
         owl:disjointUnionOf  (
        :ValueField
        :Group
        :Choice
        :Classifier
        :Options
        :Multiple
        :Heading
        :Comment );
         :creationForm :FormForm .
    
    :FormForm     a :Form,
                :Group;
         dc:title "Form for editing Forms";
         :part :FieldList,
                 [
             a :Heading;
             :contents "Edit Form"@en;
             :sequence 1 ],
                 [
             a :SingleLineTextField;
             :property dc:title;
             :sequence 2;
             :size 60 ],
                 [
             a :Comment;
             :contents """To add a field to the form, press the blue plus at the bottom,
        and then select what sort of field you want."""@en;
             :sequence 3;
             :style "background-color: #ffe;" ] .
    
        
    :NumericField     a rdfs:Class;
         rdfs:subClassOf :ValueField;
         owl:disjointUnionOf  (
        :BooleanField
        :IntegerField
        :DecimalField
        :FloatField ) .
    
    :Single     a rdfs:Class;
         owl:disjointUnionOf  (
        :ValueField
        :Group
        :Choice
        :Classifier
        :Options
        :Heading
        :Comment ) .
    
    :SingleLineTextField     rdfs:subClassOf :TextField .
    
    :TextField     a rdfs:Class;
         rdfs:subClassOf :ValueField;
         owl:disjointUnionOf  (
        :SingleLineTextField
        :MultiLineTextField ) .
    
    :ValueField     a rdfs:Class;
         rdfs:subClassOf :Form,
                :Single;
         owl:disjointUnionOf  (
        :TextField
        :NumericField
        :ColorField
        :DateField
        :DateTimeField
        :PhoneField
        :EmailField ) .
    
	######################################
    ######----axioms here ----####
    ######################################
	:Options     rdfs:subClassOf :Form,
                :Single .
    
    :PhoneField     rdfs:subClassOf :ValueField .
	:FloatField     rdfs:subClassOf :NumericField .
	:Choice     rdfs:subClassOf  :Form,
                 :Single .
    
     :Classifier     rdfs:subClassOf  :Form,
                 :Single .
    
     :ColorField     rdfs:subClassOf  :ValueField .
    
     :Comment     rdfs:subClassOf  :Form,
                 :Single .
    
     :DateField     rdfs:subClassOf  :ValueField .
    
     :DateTimeField     rdfs:subClassOf  :ValueField .
    
     :DecimalField     rdfs:subClassOf  :NumericField .
    
     :EmailField     rdfs:subClassOf  :ValueField .
	:Group     rdfs:subClassOf :Form,
                :Single .
    
    :Heading     rdfs:subClassOf :Form,
                :Single .
    
    :IntegerField     rdfs:subClassOf :NumericField .
    
    :MultiLineTextField     rdfs:subClassOf :TextField .
    
    :Multiple     rdfs:subClassOf :Form .
	
	######################################
    ######----properties here ----####
    ######################################
	
    :annotationForm     a  rdf:Property;
         rdfs:comment """A form which may be used to add more infromation to an
instance of this class which we know something about.  Anything from
adding just add one more fact, to adding a whole lot of information about a specific 
facet of the thing.
"""@en;
         rdfs:domain rdfs:Class;
         rdfs:label "annotation form"@en;
         rdfs:range :Form .
    
    :backgroundColor     a  rdf:Property,
                owl:DatatypeProperty;
         rdfs:comment """Must be a valid CSS color string such as one could put in
        an HTML style attribute.  This should be in the #xxxxxx form,
        (with 6 digits of hex)  so that it
        can work with Graphviz."""@en;
         rdfs:label "background colour"@en;
         rdfs:range :Color .
    
    :category     a  rdf:Property;
         rdfs:comment "The superclass subclasses of which will be selected."@en;
         rdfs:domain :Classifier;
         rdfs:label "property"@en;
         rdfs:range rdfs:Class .
    
    :color     a  rdf:Property,
                owl:DatatypeProperty;
         rdfs:comment """Must be a valid CSS color string such as one could put in
        an HTML style attribute.  This should be in the #xxxxxx form,
        (with 6 digits of hex)  so that it
        can work with Graphviz."""@en;
         rdfs:label "colour"@en;
         rdfs:range :Color .
    
    :creationForm     a  rdf:Property;
         rdfs:comment """A form which may be used to collect information about a
    hitherto locally undocumented instance instance of this class."""@en;
         rdfs:domain rdfs:Class;
         rdfs:label "creation form"@en;
         rdfs:range :Form .
    
    :dependingOn     a  rdf:Property;
         rdfs:comment "Many fields prompt for infromation about a gven property of the subject"@en;
         rdfs:domain :Options;
         rdfs:label "depending on"@en;
         rdfs:range  rdf:Property .
    
    :for     a  rdf:Property;
         rdfs:comment "The value for which this case is selected."@en;
         rdfs:label "for"@en .
    
    :from     a  rdf:Property;
         rdfs:domain :Choice;
         rdfs:label "from"@en;
         rdfs:range  rdf:Class;
         :prompt "from what class" .
    
    :initialProperties     a  rdf:Property;
         rdfs:comment """A really simple way of enabling user interfaces to 
            create new information about a class of things is to make a define of properties
            to be specified when a information about a new item
            ("New item" here means an item which the system
            does not have prvious information about yet,
            not an items which has just been created,
            like new friend as opposed to new baby)"""@en;
         rdfs:domain rdfs:Class;
         rdfs:label "initial properties"@en;
         rdfs:range  rdf:List;
         :prompt "Properties to be specified for new ones" .
    
    :maxLength     a  rdf:Property;
         rdfs:domain :TextField;
         rdfs:label "max length of value"@en;
         rdfs:range xsd:integer .
    
    :maxValue     a  rdf:Property;
         rdfs:domain :ValueField;
         rdfs:label "max"@en .
    
    :minValue     a  rdf:Property;
         rdfs:domain :ValueField;
         rdfs:label "min"@en .
    
    :part     a  rdf:Property;
         rdfs:domain :Form;
         rdfs:label "part"@en;
         rdfs:range :Form .
    
    :prompt     a  rdf:Property;
         rdfs:comment """A string for the UI to use if the user needs a longer
        prompts than just a field name, the rdfs:label. """@en;
         rdfs:label "user prompt"@en;
         :prompt "A longer prompt for a user inputting this property" .
    
    :property     a  rdf:Property;
         rdfs:comment "Many fields prompt for infromation about a given property of the subject"@en;
         rdfs:domain :Form;
         rdfs:label "property"@en;
         rdfs:range  rdf:Property .
    
    :seqeunce     a  rdf:Property;
         rdfs:comment "The sequence in which this item is arranged with repect to other parts."@en;
         rdfs:label "sequence number"@en;
         rdfs:range xsd:integer .
    
    :size     a  rdf:Property;
         rdfs:domain :ValueField;
         rdfs:label "size of field"@en;
         rdfs:range xsd:integer;
         :prompt "size of field in characters" .
    
    :sortBy     a  rdf:Property;
         rdfs:comment """A property which typically is used to sort
        members of a given class."""@en;
         rdfs:domain rdfs:Class;
         rdfs:label "sort by"@en;
         rdfs:range  rdf:Property .
    
    :sortPriority     a  rdf:Property,
                owl:DatatypeProperty;
         rdfs:comment """When individuals or classes must be sorted, then
        if they are given different values of sortPriority a user agent can
        use this as a hint to how to present information."""@en;
         rdfs:label "sort priority"@en;
         rdfs:range xsd:integer .
    
    :style     a  rdf:Property,
                owl:DatatypeProperty;
         rdfs:comment """Must be a valid CSS style string such as one could put in
        an HTML style attribute.  Depending on the user interface system, this can
        by given to individuals, classes or properties. It is up to a user interface 
        which wants to draw on them to pick how it uses styles from which parts
        of the data it has.  For example, the style of a class may be picked 
        to distinguish information about things in that class."""@en;
         rdfs:label "style"@en;
         :prompt "CSS style" .
    
    :tableProperties     a  rdf:Property;
         rdfs:comment """This  is a crude way of specifying a table-based
            view for objects of this class."""@en;
         rdfs:domain rdfs:Class;
         rdfs:label "table properties"@en;
         rdfs:range  rdf:List;
         :prompt "Properties to be given in a default table view" .
    
    :use     a  rdf:Property;
         rdfs:range :Form .
    
